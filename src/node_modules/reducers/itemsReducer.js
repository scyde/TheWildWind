import {
    GET_ITEMS,
    VIEW_ITEM,
    VIEW_ITEM_CLOSE,
    ADD_TO_BASKET,
    REMOVE_FROM_BASKET,
    CHECKOUT
} from '../actions/types'
const initialState = {
    list: [],
    basket: [],
    viewItem: {},
    showModal: false,
    shippingMethods: [
        {
            id: 1,
            text: 'Самовывоз'
        },
        {
            id: 2,
            text: 'Почта России'
        },
        {
            id: 3,
            text: 'служба доставки СДЭК'
        }
    ]
}

export default function itemsReducer(state = initialState, action) {
    switch (action.type) {
        case GET_ITEMS:
            return {
                ...state,
                list: action.payload
            }
        case VIEW_ITEM:
            return {
                ...state,
                viewItem: action.payload,
                showModal: true
            }
        case VIEW_ITEM_CLOSE:
            return {
                ...state,
                showModal: false
            }
        case ADD_TO_BASKET: {
            let newBasket = state.basket
            let same = true
            newBasket.map(item => {
                if (item.item.id === action.payload.item.id) {
                    item.count++
                    same = false
                }
                return item
            })
            if (same) newBasket.push(action.payload)
            return {
                ...state,
                basket: newBasket
            }
        }
        case REMOVE_FROM_BASKET: {
            const newBasket = state.basket.filter(
                item => item.item.id !== action.payload
            )
            return {
                ...state,
                basket: newBasket
            }
        }
        case CHECKOUT:
            return {
                ...state
                // write current basket to db, payment confirmed = false;
            }
        default:
            return state
    }
}
