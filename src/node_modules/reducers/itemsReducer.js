import {GET_ITEMS, VIEW_ITEM, VIEW_ITEM_CLOSE, ADD_TO_BASKET, REMOVE_FROM_BASKET} from '../actions/types'
const initialState = {
    list: [],
    basket: [],
    viewItem: {},
    showModal: false,
}

export default function itemsReducer(state = initialState, action) {
    switch (action.type) {
        case GET_ITEMS:
            return {
                ...state,
                list: action.payload
            }
        case VIEW_ITEM:
            return {
                ...state,
                viewItem: action.payload,
                showModal: true,
            }
        case VIEW_ITEM_CLOSE:
            return {
                ...state,
                showModal: false,
            }
        case ADD_TO_BASKET:
        {
            let newBasket = state.basket
            let same = true
            newBasket.map(item => {
                if (item.item.id === action.payload.item.id) {
                    item.count++
                    same=false
                }
                return item
            })
            if (same) newBasket.push(action.payload)
            return {
                ...state,
                basket: newBasket
            }
        }
        case REMOVE_FROM_BASKET:
            return {
                ...state,
                basket: state.basket.filter((item) => {
                    return item.id !== action.payload.id
                })
            }
        default:
            return state
    }

}
