import React, {Component} from 'react'
import {Switch, Route, withRouter} from 'react-router-dom'
import Loadable from 'react-loadable'
import Loading from 'loading'
import Logo from 'components/logo'
import Navbar from 'components/navbar'
import Footer from 'components/footer'
import CatalogView from 'catalog_view'
import Header from 'components/header_main'
import {connect} from 'react-redux'
import {bindActionCreators} from 'redux'
import {switchRoute} from 'actions/routeActions'
import './main.css'


const Catalog = Loadable({
    loader: () => import('catalog'),
    loading: Loading,

})
const About = Loadable({
    loader: () => import('about'),
    loading: Loading,
    delay: 500,
})
const News = Loadable({
    loader: () => import('news'),
    loading: Loading,
    delay: 500,
})
const Contacts = Loadable({
    loader: () => import('contacts'),
    loading: Loading,
    delay: 500,
})
const Basket = Loadable({
    loader: () => import('basket'),
    loading: Loading,
    delay: 500,
})

class Main extends Component {
    componentWillMount(){
        this.unlisten = this.props.history.listen((location) => {
            this.props.switchRoute(location.pathname.slice(1))
        })
    }
    componentWillUnmount() {
        this.unlisten()
    }
    render() {
        return (
            <div className='viewport'>
                <CatalogView />
                    <Logo />
                    <Navbar/>
                        <div className="main">
                            <Header/>
                            <Switch>
                                <Route path="/news" component={News} />
                                <Route path="/about" component={About} />
                                <Route path="/catalog" component={Catalog} />
                                <Route path="/contacts" component={Contacts} />
                                <Route path="/basket" component={Basket} />
                            </Switch>                           
                        </div>
                    <Footer/>
            </div>
        )
    }
}
const mapDispatchToProps = dispatch => {
    return bindActionCreators({
        switchRoute: switchRoute
    }, dispatch)
}

export default connect(null,mapDispatchToProps)(withRouter(Main))
