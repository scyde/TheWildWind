import React, { Component } from 'react'
import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'
import { viewItemClose } from 'actions/itemActions'

class CatalogView extends Component {
    constructor() {
        super()
        this.state = {
            showModal: false,
            item: {},
            shouldRender: false
        }
    }
    static getDerivedStateFromProps(props, state) {
        if (props.showModal !== state.showModal || props.item !== state.item) {
            return {
                showModal: props.showModal,
                item: props.item
            }
        }
    }
    render() {
        return (
            <div
                className={
                    'modal-bg ' + (!this.state.showModal ? 'invisible' : '')
                }
                onClick={() => this.props.viewClose()}
            >
                <div className="modal">{this.state.item.name}</div>
            </div>
        )
    }
}

const mapStateToProps = state => {
    return {
        item: state.items.viewItem,
        showModal: state.items.showModal
    }
}
const mapDispatchToProps = dispatch => {
    return bindActionCreators(
        {
            viewClose: viewItemClose
        },
        dispatch
    )
}

export default connect(mapStateToProps, mapDispatchToProps)(CatalogView)
